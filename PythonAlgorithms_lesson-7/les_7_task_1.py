'''
Курс "Алгоритмы и структуры данных на Python."
Урок # 7.
Задание # 1.

Отсортируйте по убыванию методом пузырька одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
Примечания:
a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.

Улучшение - добавление булевой переменной array_changed. Которая становится True, если во время прохождения по
внутреннему циклу была хотя бы одна замена. Если не было, то список отсортирован. И можно остановиться.

'''


from random import randint


def bubble_sort(array):
    i = 1
    array_changed = True
    while i < len(array) and array_changed:
        array_changed = False
        for j in range(len(array)-i):
            if array[j] > array[j+1]:
                array[j], array[j+1] = array[j+1], array[j]
                array_changed = True
        i += 1

n = 10
array = [randint(-100, 99) for _ in range(n)]
print(array)
bubble_sort(array)
print(array)